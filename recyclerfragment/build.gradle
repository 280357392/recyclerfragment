apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'fr.nihilus'
version = '1.0.4'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 25
        versionCode 1
        versionName project.version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    testCompile "junit:junit:${junitVersion}"
}

def siteUrl = 'https://github.com/thibseisel/recyclerfragment'
def gitUrl = 'https://github.com/thibseisel/recyclerfragment.git'

Properties localProperties = new Properties();
localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = localProperties.getProperty('bintray.user')
    key = localProperties.getProperty('bintray.apikey')

    configurations = ['archives']
    pkg {
        repo = 'android'
        name = project.name
        desc = 'An Android Fragment that displays a set of items in a RecyclerView.'
        websiteUrl = siteUrl
        issueTrackerUrl = siteUrl + '/issues'
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['android', 'fragment', 'recyclerview']
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'An Android Fragment that displays a set of items in a RecyclerView.'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org.licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'thibseisel'
                        name 'Thibault Seisel'
                    }
                }
                scm {
                    connection 'https://github.com/thibseisel/recyclerfragment.git'
                    developerConnection 'https://github.com/thibseisel/recyclerfragment.git'
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.separator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

